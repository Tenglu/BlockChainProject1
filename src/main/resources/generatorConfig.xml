<?xml version="1.0" encoding="UTF-8" ?>

    <!DOCTYPE generatorConfiguration 
      PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
      "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!-- <classPathEntry location="D:/Work_Soft/apache-maven/repo/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar" 
		/> -->
	<!-- <classPathEntry location="D:/work/mysql-connector-java-5.1.46.jar" /> -->
	<classPathEntry location="C:\Users\liangtl2\.m2\repository\mysql\mysql-connector-java\5.1.46\mysql-connector-java-5.1.46.jar" />
	<context id="blockchain" targetRuntime="MyBatis3">

		<!-- 配置注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" /><!-- 配置是否取消注释 -->
			<property name="suppressDate" value="true" /><!-- 配置 注释是否显示日期 -->
		</commentGenerator>

		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost:3306/blockchain?useUnicode=true&amp;characterEncoding=utf-8"
			userId="root" password="ltl901020">
		</jdbcConnection>
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成model模型，对应的包，存放位置可以指定具体的路径,如/ProjectName/src，也可以使用MAVEN来自动生成 -->
		<javaModelGenerator targetPackage="com.example.demo.model"
			targetProject="src/main/java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!--对应的xml mapper文件 -->
		<sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码 type="ANNOTATEDMAPPER",生成Java Model 
			和基于注解的Mapper对象 type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象 type="XMLMAPPER",生成SQLMap 
			XML文件和独立的Mapper接口 -->

		<!-- 对应的dao接口 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="com.example.demo.dao" targetProject="src/main/java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- 这里是数据库的表名table_user 以及 POJO类的名字User <table tableName="Project_ProjectInfo" 
			domainObjectName="ProjectInfo" enableCountByExample="false" enableSelectByExample="false" 
			enableUpdateByExample="false" enableDeleteByExample="false"> generatedKey用于生成生成主键的方法， 
			如果设置了该元素，MBG会在生成的<insert>元素中生成一条正确的<selectKey>元素，该元素可选 column:主键的列名； sqlStatement：要生成的selectKey语句，有以下可选项： 
			Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL() DB2 :相当于selectKey的SQL为： 
			VALUES IDENTITY_VAL_LOCAL() DB2_MF :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() 
			FROM SYSIBM.SYSDUMMY1 Derby :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL() 
			HSQLDB :相当于selectKey的SQL为：CALL IDENTITY() Informix :相当于selectKey的SQL为：select 
			dbinfo('sqlca.sqlerrd1') from systables where tabid=1 MySql :相当于selectKey的SQL为：SELECT 
			LAST_INSERT_ID() SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY() SYBASE 
			:相当于selectKey的SQL为：SELECT @@IDENTITY JDBC :相当于在生成的insert元素上添加useGeneratedKeys="true"和keyProperty属性 
			<generatedKey column="id" sqlStatement="MySql" identity="true" /> </table> -->

		<!-- <table tableName="Project_TaskInfo" domainObjectName="TaskInfo" enableCountByExample="false" 
			enableSelectByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"> 
			<generatedKey column="id" sqlStatement="MySql" identity="true" /> </table> -->

		<table tableName="work_order_list" domainObjectName="WorkOrder"
			enableCountByExample="false" enableSelectByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false">
			<generatedKey column="id" sqlStatement="MySql" identity="true" />
		</table>

	</context>

</generatorConfiguration>